<div class='pydoc'>
<p><small>For OpenSesame 2.8.2</small></p>
<span class='class_name'>class <b>mouse</b></span><br />
<p class='details'><b>Function overview:</b><br />
<a href='#mouse.__init__'>__init__</a><br />
<a href='#mouse.flush'>flush</a><br />
<a href='#mouse.get_click'>get_click</a><br />
<a href='#mouse.get_pos'>get_pos</a><br />
<a href='#mouse.get_pressed'>get_pressed</a><br />
<a href='#mouse.set_buttonlist'>set_buttonlist</a><br />
<a href='#mouse.set_pos'>set_pos</a><br />
<a href='#mouse.set_timeout'>set_timeout</a><br />
<a href='#mouse.set_visible'>set_visible</a><br />
</p>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.__init__'>mouse</a>.<b>__init__(experiment, buttonlist=None, timeout=None, visible=False)</b></span><div class='details'>
Intializes the mouse object.<br />
<br />
<span class='keyword'>Arguments:</span>
<br />
<span class='variable'>experiment </span> &rarr;  An instance of libopensesame.experiment.experiment.
<br />
<br />
<span class='keyword'>Keyword arguments:</span>
<br />
<span class='variable'>buttonlist </span> &rarr;  A list of buttons that are accepted or None to accept all 
input (default = None).<br />
<span class='variable'>timeout </span> &rarr;  An integer value specifying a timeout in milliseconds or None 
for no timeout (default = None).<br />
<span class='variable'>visible </span> &rarr;  A Boolean indicating the visibility of the cursor 
(default=False).<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.flush'>mouse</a>.<b>flush()</b></span><div class='details'>
Clears all pending input, not limited to the mouse.<br />
<br />
<span class='keyword'>Returns:</span>
<br />
True if a button had been clicked (i.e., if there was something to flush) and False otherwise.<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
my_mouse.flush()
button, position, timestamp = my_mouse.get_click()
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.get_click'>mouse</a>.<b>get_click(buttonlist=None, timeout=None, visible=None)</b></span><div class='details'>
Waits for mouse input.<br />
<br />
<span class='keyword'>Keyword arguments:</span>
<br />
<span class='variable'>buttonlist </span> &rarr;  A list of buttons that are accepted or None to use the 
default. This parameter does not change the default keylist (default=None).<br />
<span class='variable'>timeout </span> &rarr;  An integer value specifying a timeout in milliseconds or None 
to use the default. This parameter does not change the default timeout (default=None).<br />
<span class='variable'>visible </span> &rarr;  A Boolean indicating the visibility of the target or None to 
use the default. This parameter does not change the default visibility (default=False).<br />
<br />
<span class='keyword'>Returns:</span>
<br />
A (button, position, timestamp) tuple. The button and position are None if a timeout occurs. Position is an (x, y) tuple in screen coordinates.<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
button, position, timestamp = my_mouse.get_click()
if button == None:
	print('A timeout occurred!')
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.get_pos'>mouse</a>.<b>get_pos()</b></span><div class='details'>
Returns the current location of the cursor.<br />
<br />
<span class='keyword'>Returns:</span>
<br />
A (position, timestamp) tuple.<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
position, timestamp = my_mouse.get_pos()
x, y = position
print('The cursor was at (%d, %d)' % (x, y))
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.get_pressed'>mouse</a>.<b>get_pressed()</b></span><div class='details'>
Returns the current state of the mouse buttons. A True value means the button is currently being pressed.<br />
<br />
<span class='keyword'>Returns:</span>
<br />
A (button1, button2, button3) tuple.<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
buttons = my_mouse.get_pressed()
b1, b2, b3 = buttons
print('Currently pressed mouse buttons: (%d, %d, %d)' % (b1, b2, b3))
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.set_buttonlist'>mouse</a>.<b>set_buttonlist(buttonlist = None)</b></span><div class='details'>
Sets a list of accepted buttons.<br />
<br />
<span class='keyword'>Keyword arguments:</span>
<br />
<span class='variable'>buttonlist </span> &rarr;  A list of buttons that are accepted or None to accept all 
input (default=None).<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
my_mouse.set_buttonlist( [1,2] )
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.set_pos'>mouse</a>.<b>set_pos(pos=(0,0))</b></span><div class='details'>
Sets the mouse position.<br />
<br />
<span class='keyword'>Keyword arguments:</span>
<br />
<span class='variable'>pos </span> &rarr;  A (x,y) tuple for the new mouse coordinates (default = (0,0))
<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
my_mouse.set_pos(pos=(0,0))
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.set_timeout'>mouse</a>.<b>set_timeout(timeout=None)</b></span><div class='details'>
Sets a timeout.<br />
<br />
<span class='keyword'>Keyword arguments:</span>
<br />
<span class='variable'>timeout </span> &rarr;  An integer value specifying a timeout in milliseconds or None 
for no timeout (default=None).<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
my_mouse.set_timeout(2000)
{% endhighlight %}<br />
</div></div>
<div class='function'><span class='function_name'><a class='anchor' id='mouse.set_visible'>mouse</a>.<b>set_visible(visible=True)</b></span><div class='details'>
Sets the visibility of the cursor.<br />
<br />
<span class='keyword'>Keyword arguments:</span>
<br />
<span class='variable'>visible </span> &rarr;  A Boolean indicating the visibility of the cursor 
(default=True).<br />
<br />
<span class='keyword'>Example:</span>
<br />
{% highlight python %}from openexp.mouse import mouse
my_mouse = mouse(exp)
my_mouse.set_visible()
{% endhighlight %}<br />
</div></div>
</div>